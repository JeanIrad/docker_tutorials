{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red183\green111\blue179;\red24\green24\blue24;\red193\green193\blue193;
\red67\green192\blue160;\red140\green211\blue254;\red194\green126\blue101;}
{\*\expandedcolortbl;;\cssrgb\c77255\c52549\c75294;\cssrgb\c12157\c12157\c12157;\cssrgb\c80000\c80000\c80000;
\cssrgb\c30588\c78824\c69020;\cssrgb\c61176\c86275\c99608;\cssrgb\c80784\c56863\c47059;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Checking images: docker images\
Checking all containers: docker ps -a\
Stopping a detached docker container\
Run docker stop container_id\
\
Port binding\
\
Run this command: docker run -d -p locahost_port:image_port image:tag\
\
Logging a running docker image\
\
Run this: docker logs\
\
Stopping and starting containers\
\
Listing the containers: docker ps -a\
Starting the container: docker start container_id\
Stopping container: docker stop container_id\
\
Setting container name:\
Run this: docker run \'97name your_name -d -p localhost_port:container_port image:tag\
\
Docker public and private registries\
Creating docker file\
\
\pard\pardeftab720\partightenfactor0

\f1\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
FROM\cf4  \cf5 node\cf4 :\cf6 19-alpine\cf4 \cb1 \
\
\cf2 \cb3 COPY\cf4  \cf6 package.json\cf4  \cf6 /app/\cf4 \cb1 \
\cf2 \cb3 COPY\cf4  \cf6 src\cf4  \cf6 /app/\cf4 \cb1 \
\
\cf2 \cb3 WORKDIR\cf4  \cf6 /app\cf4 \cb1 \
\
\cf2 \cb3 RUN\cf4  \cf6 npm\cf4  \cf6 install\cf4 \cb1 \
\
\cb3  \cf2 CMD\cf4  \cf6 [\cf4  \cf7 "node"\cf6 ,\cf4  \cf7 "server.js"\cf4  \cf6 ]\cf4 \cb1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 \
Creating a docker image:\
Run this: docker build -t image_name:tag path/directory\
\
Starting an interactive container: docker run -it imageName\
Linux commands: displaying the location of the program: echo $0\
\
Syncing the docker container with the local directory:\
Run: docker run -v $\{path to your working directory\}:$\{path of the docker container\} -p localport:exposedport \'97name container_name image_names\
}